{"version":3,"file":"static/js/reactPlayerTwitch.1be13dc9.chunk.js","mappings":"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","sources":["../node_modules/react-player/lib/players/Twitch.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Twitch_exports = {};\n__export(Twitch_exports, {\n  default: () => Twitch\n});\nmodule.exports = __toCommonJS(Twitch_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://player.twitch.tv/js/embed/v1.js\";\nconst SDK_GLOBAL = \"Twitch\";\nconst PLAYER_ID_PREFIX = \"twitch-player-\";\nclass Twitch extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"playerID\", this.props.config.playerId || `${PLAYER_ID_PREFIX}${(0, import_utils.randomString)()}`);\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"setMuted\", true);\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"setMuted\", false);\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url, isReady) {\n    const { playsinline, onError, config, controls } = this.props;\n    const isChannel = import_patterns.MATCH_URL_TWITCH_CHANNEL.test(url);\n    const id = isChannel ? url.match(import_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(import_patterns.MATCH_URL_TWITCH_VIDEO)[1];\n    if (isReady) {\n      if (isChannel) {\n        this.player.setChannel(id);\n      } else {\n        this.player.setVideo(\"v\" + id);\n      }\n      return;\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Twitch2) => {\n      this.player = new Twitch2.Player(this.playerID, {\n        video: isChannel ? \"\" : id,\n        channel: isChannel ? id : \"\",\n        height: \"100%\",\n        width: \"100%\",\n        playsinline,\n        autoplay: this.props.playing,\n        muted: this.props.muted,\n        // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859\n        controls: isChannel ? true : controls,\n        time: (0, import_utils.parseStartTime)(url),\n        ...config.options\n      });\n      const { READY, PLAYING, PAUSE, ENDED, ONLINE, OFFLINE, SEEK } = Twitch2.Player;\n      this.player.addEventListener(READY, this.props.onReady);\n      this.player.addEventListener(PLAYING, this.props.onPlay);\n      this.player.addEventListener(PAUSE, this.props.onPause);\n      this.player.addEventListener(ENDED, this.props.onEnded);\n      this.player.addEventListener(SEEK, this.props.onSeek);\n      this.player.addEventListener(ONLINE, this.props.onLoaded);\n      this.player.addEventListener(OFFLINE, this.props.onLoaded);\n    }, onError);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    this.callPlayer(\"pause\");\n  }\n  seekTo(seconds, keepPlaying = true) {\n    this.callPlayer(\"seek\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction);\n  }\n  getDuration() {\n    return this.callPlayer(\"getDuration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"getCurrentTime\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style, id: this.playerID });\n  }\n}\n__publicField(Twitch, \"displayName\", \"Twitch\");\n__publicField(Twitch, \"canPlay\", import_patterns.canPlay.twitch);\n__publicField(Twitch, \"loopOnEnded\", true);\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Twitch_exports","target","all","name","__export","default","Twitch","module","exports","import_react","isNodeMode","__esModule","__toESM","require","import_utils","import_patterns","PLAYER_ID_PREFIX","arguments","callPlayer","props","config","playerId","randomString","this","onMount","url","isReady","playsinline","onError","controls","isChannel","MATCH_URL_TWITCH_CHANNEL","test","id","match","MATCH_URL_TWITCH_VIDEO","player","setChannel","setVideo","getSDK","then","Twitch2","Player","playerID","video","channel","height","width","autoplay","playing","muted","time","parseStartTime","options","READY","PLAYING","PAUSE","ENDED","ONLINE","OFFLINE","SEEK","addEventListener","onReady","onPlay","onPause","onEnded","onSeek","onLoaded","seconds","keepPlaying","pause","fraction","createElement","style","Component","canPlay","twitch"],"sourceRoot":""}